{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASC,cAAc,gBAChCE,EAAaJ,EAAKK,SAASC,MAC3BC,EAAYP,EAAKK,SAASG,KAC1BC,EAAcT,EAAKK,SAASK,OAElC,SAASC,EAAcC,EAAUN,GAC/B,OAAO,IAAIO,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUN,UAEpBS,EAAO,CAAEH,WAAUN,S,GAEpBA,E,IAIPH,EAAOiB,iBAAiB,SAAS,SAAAC,GAC/BA,EAAMC,iBAON,IALA,IAAMC,EAAQC,OAAOpB,EAAWqB,OAC1BjB,EAAOgB,OAAOjB,EAAUkB,OACxBf,EAASc,OAAOf,EAAYgB,OAE5BC,EAAW,GACRC,EAAI,EAAGA,EAAIjB,EAAQiB,IAAK,CAC/B,IACMC,EAAUjB,EAAcgB,EAAI,EADdJ,EAAQI,EAAInB,GAEhCkB,EAASG,KAAKD,E,CAGZF,EAASI,QAAUpB,GACrBgB,EAASK,SAAQ,SAAAH,GACfA,EACGI,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUN,EAAK2B,EAAL3B,MACjBR,EAAAoC,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAAN9B,EAAM,M,IAE9D+B,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAUN,EAAK2B,EAAL3B,MAClBR,EAAAoC,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst button = document.querySelector('.form button');\nconst delayInput = form.elements.delay;\nconst stepInput = form.elements.step;\nconst amountInput = form.elements.amount;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nbutton.addEventListener('click', event => {\n  event.preventDefault();\n\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  const promises = [];\n  for (let i = 0; i < amount; i++) {\n    const curentDelay = delay + i * step;\n    const promise = createPromise(i + 1, curentDelay);\n    promises.push(promise);\n  }\n\n  if (promises.length <= amount) {\n    promises.forEach(promise => {\n      promise\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    });\n  }\n});\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$button","$ce04d3a99e08e73b$var$delayInput","elements","delay","$ce04d3a99e08e73b$var$stepInput","step","$ce04d3a99e08e73b$var$amountInput","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","promises","i","promise","push","length","forEach","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.223acfa9.js.map"}